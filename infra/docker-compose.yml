services:

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - kafka_net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    networks:
      - kafka_net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka_net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_net
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:29092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - ../config/settings.env.docker  # путь до твоего .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - kafka_net
  db_api:
    build:
      context: ../services/db_api  # путь от infra до db_api
      dockerfile: Dockerfile       # если он так и называется
    container_name: db_api
    restart: always
    depends_on:
      - postgres
    networks:
      - kafka_net
    ports:
      - "8000:8000"
    volumes:
      - ../services/db_api:/app     # чтобы код подхватывался локально
    environment:
      ENV_FILE: settings.env.docker
volumes:
  postgres_data:

networks:
  kafka_net:
    external: true
